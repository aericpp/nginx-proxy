name: ci-docker

on:
  push:
    branches:
     - 'main'  
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 6 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout project
      uses: actions/checkout@v3
      
    - name: check_release
      id: check_release
      run: |
        chmod +x entrypoint.sh
        echo "FLAG=$(bash check_release.sh)" >> $GITHUB_OUTPUT
        echo "TAG_NAME=$(cat release.version)" >> $GITHUB_OUTPUT
        echo "TAG_EXIST=$(cat tag.exist)" >> $GITHUB_OUTPUT

    - name: test
      run: |
        echo ${{ steps.check_release.outputs.FLAG }}
        echo ${{ steps.check_release.outputs.TAG_NAME }}
        echo ${{ steps.check_release.outputs.TAG_EXIST }}

    # - name: compile nginx-proxy
    #   if: ${{ steps.check_release.outputs.FLAG == 1 }}
    #   uses: docker://debian:11-slim
    #   with:
    #     entrypoint: /github/workspace/entrypoint.sh
    #     args: 11

    # - name: compile nginx-proxy
    #   if: ${{ steps.check_release.outputs.FLAG == 1 }}
    #   uses: docker://debian:12-slim
    #   with:
    #     entrypoint: /github/workspace/entrypoint.sh
    #     args: 12

    # - name: upload artifact
    #   if: ${{ steps.check_release.outputs.FLAG == 1 }}
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: nginx
    #     path: |
    #       release/

    - name: notify
      if: ${{ steps.check_release.outputs.FLAG == 1 }}
      run: |
        curl "${{secrets.PUSH_URL}}?title=Nginx新编译发布&body=${{ steps.check_release.outputs.TAG_NAME }}+${{ steps.check_release.outputs.FLAG }}"

    # - name: release
    #   if: ${{ steps.check_release.outputs.FLAG == 1 }}
    #   uses: ncipollo/release-action@v1
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     name: ${{ format('nginx_{0}', steps.check_release.outputs.TAG_NAME) }}
    #     tag: ${{ format('{0}', steps.check_release.outputs.TAG_NAME) }}
    #     artifacts: 'release/*'