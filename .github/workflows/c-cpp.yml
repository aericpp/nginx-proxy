name: build nginx

on:
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout workflow
      uses: actions/checkout@v2
      
    - name: Clone Openssl
      run: |
        git clone https://github.com/openssl/openssl.git -b OpenSSL_1_1_1-stable openssl
    - name: Clone ngx_http_proxy_connect_module
      run: |
        git clone https://github.com/chobits/ngx_http_proxy_connect_module.git
    - name: Clone nginx
      run: |
        git clone https://github.com/nginx/nginx.git
    - name: Compile
      run: |
        pwd
        cur_path=`pwd`
        cd nginx
        mv auto/configure configure
        patch -p1 <../ngx_http_proxy_connect_module/patch/proxy_connect_rewrite_1018.patch
        ./configure  --prefix=/usr/share/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --lock-path=/var/lock/nginx.lock --pid-path=/run/nginx.pid --modules-path=/usr/lib/nginx/modules --http-client-body-temp-path=/var/lib/nginx/body --http-proxy-temp-path=/var/lib/nginx/proxy --http-fastcgi-temp-path=/var/lib/nginx/fastcgi --without-mail_pop3_module --without-mail_imap_module --without-mail_smtp_module --without-http_memcached_module --without-http_uwsgi_module --without-http_scgi_module --with-http_gzip_static_module --with-http_ssl_module --with-http_stub_status_module --with-http_v2_module --with-openssl="${cur_path}/openssl" --with-openssl-opt=enable-tls1_3 --with-stream --with-stream_ssl_module --add-module="${cur_path}/ngx_http_proxy_connect_module"
        make
        test -d ../nginx_debian/usr/sbin/ || mkdir -p ../nginx_debian/usr/sbin/
        cp objs/nginx ../nginx_debian/usr/sbin/nginx
    - name: deb package
      run: |
        pwd
        NG_PKG_SIZE=`du -sk nginx_debian|awk '{print $1}'`
        NG_PKG_VERSION=`cat nginx/src/core/nginx.h |grep "#define NGINX_VERSION" | awk '{print $3}' | sed 's/"//g'`
        sed -e "s|%%SIZE%%|${NG_PKG_SIZE}|" -e "s|%%VERSION%%|${NG_PKG_VERSION}|" < control_tmpl > nginx_debian/DEBIAN/control
        test -d "nginx_debian/var/lib/nginx" || mkdir -p "nginx_debian/var/lib/nginx"        
        test -d "nginx_debian/var/log/nginx" || mkdir -p "nginx_debian/var/log/nginx"
        test -d "nginx_debian/var/www/html" || mkdir -p "nginx_debian/var/www/html"
        test -d "nginx_debian/etc/nginx/modules-available" || mkdir -p "nginx_debian/etc/nginx/modules-available"
        test -d "nginx_debian/etc/nginx/modules-enabled" || mkdir -p "nginx_debian/etc/nginx/modules-enabled"
        test -d "nginx_debian/etc/nginx/conf.d" || mkdir -p "nginx_debian/etc/nginx/conf.d"
        test -d "nginx_debian/etc/nginx/sites-enabled" || mkdir -p "nginx_debian/etc/nginx/sites-enabled"
        dpkg -b nginx_debian nginx_proxy.deb
    - name: Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: nginx
        path: |
          nginx_proxy.deb
    - name: release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "nginx_proxy.deb"
        bodyFile: "nginx_proxy.deb"
        token: ${{ secrets.GITHUB_TOKEN }}
